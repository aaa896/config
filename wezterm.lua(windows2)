local wezterm = require 'wezterm'
local act = wezterm.action
-- This table will hold the configuration.
local config = {}


wezterm.on('format-tab-title', function(tab, tabs, panes, config, hover, max_width)
  local process_name = tab.active_pane.foreground_process_name
  local title = tab.active_pane.title

  -- Tab index (starting from 1)
  local tab_index = tab.tab_index + 1

  -- Check if the process is Neovim
  if process_name:find('nvim') then
    -- Extract only the file name from the title
    local filename = title:match("[^%s]+$")
    -- Return tab number and filename
    return string.format(' %d: %s ', tab_index, filename)
  end

  -- Default tab title for other processes
  return string.format('%d: %s', tab_index, title)
end)



-- In newer versions of wezterm, use the config_builder which will
-- help provide clearer error messages


if wezterm.config_builder then
    config = wezterm.config_builder()
end

--config.default_prog = { 'cmd.exe' }



config.inactive_pane_hsb = {
    saturation = 1,
    brightness = 1
}
config.window_background_opacity = 1.0
config.use_fancy_tab_bar = false
config.tab_bar_at_bottom = false
--
-- This is where you actually apply your config choices
-- For example, changing the color scheme:
--config.color_scheme = 'BlueBerryPie'
--
config.font = wezterm.font_with_fallback {
    'JetBrains Mono',
    'Noto Color Emoji',
}


config.harfbuzz_features = { 'calt=0', 'clig=0', 'liga=0' }
config.font_size=10.6
config.tab_max_width = 50
config.show_new_tab_button_in_tab_bar = false

config.colors = {
     cursor_bg = "#719b92",
    background="rgba(40,40,40,0.96)",
    foreground = '#ebdbb2',
  tab_bar = {
    -- The color of the strip that goes along the top of the window
    -- (does not apply when fancy tab bar is in use)
	--
    
    background="rgba(50,50,50,1)",
	active_tab = {
      	-- The color of the background area for the tab
      	bg_color = "rgba(40,40,40,1)",
      	-- The color of the text for the tab
      	fg_color = '#ebdbb2',
  	},
inactive_tab = {
  	bg_color = "rgba(50,50,50,1)",
  	fg_color = '#808080',

  	-- The same options that were listed under the `active_tab` section above
  	-- can also be used for `inactive_tab`.
	},


    
    },

}

config.keys = {
    -- activate pane selection mode with the default alphabet (labels are "a", "s", "d", "f" and so on)
    {
        key = '2', mods = 'CTRL',
        action = act.PaneSelect {
            mode="MoveToNewTab",
        },
    },
    -- activate pane selection mode with numeric labels
    {
        key = '1',
        mods = 'CTRL',
        action = act.PaneSelect {
            --alphabet = '1234567890',
            mode = 'MoveToNewWindow',
        },
    },
    -- show the pane selection mode, but have it swap the active and selected panes
    {
        key = '3',
        mods = 'CTRL',
        action = act.PaneSelect {
            mode="Activate",
        },
    },
    {
        key = '0',
        mods = 'CTRL',
        action = act.PaneSelect {
            mode = 'SwapWithActiveKeepFocus',
        },
    },
    {

        key = 'w',

        mods = 'CTRL',

        action = wezterm.action.CloseCurrentPane { confirm = true },

    },
    {
        key = 'F5',
        action = wezterm.action.SpawnCommandInNewTab {
            args = { 
                'cmd.exe', './c',
                'r.bat',
            },
        },  
        exit_behavior = "Close",
    },
    {
        key = 'm',
        mods = 'ALT',
        action = wezterm.action.SpawnCommandInNewTab {
            args = { 
                'cmd.exe', './c', 
                'b.bat' ,
            },
        },  
        exit_behavior = "Close",
    },

  {
      key = 'L',
    mods = 'SHIFT|CTRL',
    action = act.AdjustPaneSize { 'Left', 5 },
  },
  {
    key = 'J',
    mods = 'SHIFT|CTRL',
    action = act.AdjustPaneSize { 'Down', 5 },
  },
  { key = 'K', mods = 'SHIFT|CTRL', action = act.AdjustPaneSize { 'Up', 5 } },
  {
    key = 'L',
    mods = 'SHIFT |CTRL',
    action = act.AdjustPaneSize { 'Right', 5 },
  },

}

-- and finally, return the configuration to wezterm
return config
